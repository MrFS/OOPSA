<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIADMBAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAgAAAAIAgGAAAAc3p69AAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAEYUlEQVRYR72XTWhd
        RRTHZ25eS4VA3wNLs4iQ4jNJ4QlPmkUWBVvIRiiotGAXXRhT0UU3QsW4KFaKdOEiQhciNH0uBJEiiViw
        u0YoNIKihWI+jERJJRVDE2nB1iQz/v73zm3z8b4T/MP/zsyZuefMmTnzZU0D8N4X4VGyBdgWKCzAO3DS
        WvsVvB5L60DNDmBwF8kg6QCK20lXKM/A24GCOtIO87TZRRt16FPyH8AlNWgKzrmTcB6FnnQEniD7ZKje
        BOpaaXMMfg6X4SI8jTwTmtSHoOgyqQxfgz2hqm7wTx6OpDpI0umqDjXkhx+hPHgziJsGOjQi9+AsuruD
        uDxoIM9lfJF8XxBvGegqonMezsnBIN4MGlyGy9tpPAV6C1AjcQP9m2OCipNUaL62POyVgO4jsgHOBlGy
        DBFo6cySnYyi6LBkG7G79MuhyPtroVgVztrDf/c/MxaK60AnSiTHWZ774J0oEZtBCpqbt5PiZrQs+xlv
        /JnF1zqtUrtinjKr7gXR2R05fPlIdc67tzBTbe2f0QeHzymNO0BhAI7i/fcql0WL6bXGHkgK9pXVHewH
        ke0VV/99mDHevaqayERPG+cPxc3KABvavC5C7SmtjKov4r12sS/VoBK8cXlv7GRS8Pms2Znkwf03urXz
        mT2lW23OuF/R1xVXVAD1X0DtsH3qwFG4guBqUl0BNuqyzt3cXZrooPDb7/37HoSaGJ74WXGZfOQMHbP5
        IK6EcWwuyDY63QiCboZmf1K3GfJsxe/82HszQ9Q+8Nb0WO+/I92LsSz5KcL5gDfRLbW3xhUydvn1v/oL
        OqDKArvfkLQpBhR86aFSFs5ksgz7TWvNaXxdlXHJicY/Y+OCNz9Y7x5a4weVj/+pDtlsU09mw9Koidyl
        aUb6MXLD0xeQaQQfYWObSmD4z0KvEdCupCO2cVjfgbfERPNQBzRPWgUNITc8xW5mjzDhxSTfGHB+L1xQ
        EH5NuYMgfDapWo/cxZ8LxrYciwvWvsef74f883zT9T6G/Ns4t6aNjezVu/2d47F8A1K76sCHZE6xDPfA
        +3HtGmSHp+cJrE9CsSEQDO8sDXQ9EYrrgN05knENxUEFA4LEyw2oN6jKodK/2OoJNk9EeH2dvHayF5Pq
        /wXp5nclPYw+g8fpUa0dbMvAsPYHHfmjdGApPY6zUMfxGMH4smQpcpemCBaivRl489PiQOdzoRQDJ4dI
        TsH92NLtOgEd0NVbeCmIth0Y74W6a14IosfAcIYK3YDvkS8G8bYBve1Q98IJ9LcG8XpQoRuxtuY5qNfP
        tgBdMj4BddmteTPuDh3QBbK5uV8DdGjY5bmMHwzi6ggjcQNqvkqw4a0aHVn+Gwo6NOzVPd8IflBMnIP/
        BA7JA8lDk7KgXQ88D/UsiwOOf8rPOajncdoGz5PVTTZ9eOrueJvyH6ENF5P4QIuvd5R1uo7Cd9cttTKo
        2YEUKJUXfaSPnucYi185oVPx8xzqeX4F1vEqNuY/FzD3zYwLLP8AAAAASUVORK5CYII=
</value>
  </data>
</root>